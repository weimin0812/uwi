class Solution {
    public int longestValidParentheses(String s) {
         int ret = 0;
        if (s == null || s.length() <= 1) {
            return ret;
        }

        int[] dp = new int[s.length()];
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == ')') {
                if (i - 1 >= 0 && s.charAt(i - 1) == '(') {
                    dp[i] = (i - 2 >= 0 ? dp[i - 2] : 0) + 2;
                } else if (i - 1 >= 0 && s.charAt(i - 1) == ')') {
                    int index = i - dp[i - 1] - 1;
                    if (index >= 0 && s.charAt(index) == '(') {
                        dp[i] = dp[i - 1] + (index - 1 >= 0 ? dp[index - 1] : 0) + 2;
                    }
                }

                ret = Math.max(ret, dp[i]);
            }
        }

        return ret;

    }
}
//runtime:11 ms
//memory:N/A
