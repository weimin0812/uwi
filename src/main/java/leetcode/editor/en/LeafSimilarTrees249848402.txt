/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
   public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        if (root1 == null || root2 == null) {
            return root1 == root2;
        }

        ArrayList<Integer> list1 = new ArrayList<>();
        ArrayList<Integer> list2 = new ArrayList<>();
        inOrder(root1, list1);
        inOrder(root2, list2);
        for (int i = 0; i < list1.size(); i++) {
            if (list1.get(i) != list2.get(i)) {
                return false;
            }
        }

        return true;
    }

    private void inOrder(TreeNode node, ArrayList<Integer> list) {
        if (node == null) {
            return;
        }

        inOrder(node.left, list);
        if (node.left == null && node.right == null) {
            list.add(node.val);
        }
        inOrder(node.right, list);
    }
}
//runtime:0 ms
//memory:35.1 MB
