    class Solution {
        public boolean canPartition(int[] nums) {
            int sum = 0;
            for (int num : nums) {
                sum += num;
            }
            if (sum % 2 == 1) {
                return false;
            }
            sum /= 2;
            int n = nums.length;
            boolean[][] dp = new boolean[n + 1][sum + 1];
            for (int i = 0; i < dp.length; i++) {
                for (int j = 0; j < dp[i].length; j++) {
                    if (i == 0) {
                        dp[i][j] = j == 0;
                    } else {
                        dp[i][j] = dp[i - 1][j];
                        if (j >= nums[i - 1]) {
                            dp[i][j] = dp[i][j] || dp[i - 1][j - nums[i - 1]];
                        }
                    }
                }
            }
            return dp[n][sum];
        }
    }

//runtime:40 ms
//memory:41.6 MB
