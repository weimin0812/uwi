class Solution {
    public void nextPermutation(int[] nums) {
        if (nums == null || nums.length <= 1){
            return;
        }
        
        int index = nums.length - 2;
        
        while (index >= 0 && nums[index] >= nums[index+1]){
            index--;
        }
        if (index >= 0){
           int i = index + 1;
        for (; i < nums.length; i++){
            if (nums[i] <= nums[index]){
                break;
            }
        }
        
        swap(nums, index, i - 1);
       
        }
          reverse(nums, index + 1);        
    }
    
    private void swap(int[] nums, int i, int j){
        int t = nums[i];
        nums[i] = nums[j];
        nums[j] = t;
    }
    
    private void reverse(int[] nums, int l){
        int h = nums.length - 1;
        while (l < h){
            swap(nums, l, h);
            l++;
            h--;
        }
    }
}
//runtime:12 ms
//memory:N/A
