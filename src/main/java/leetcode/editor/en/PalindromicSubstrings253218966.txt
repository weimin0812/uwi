class Solution {
    public int countSubstrings(String s) {
        int n = s.length();
        boolean[][] dp = new boolean[n][n];
        int count = 0;
        for (int d = 0; d < n; d++) {
            for (int i = 0; i < n - d; i++) {
                int j = i + d;
                if (s.charAt(i) == s.charAt(j)) {
                    dp[i][j] = i + 1 >= j - 1 ? true : dp[i + 1][j - 1];
                    if (dp[i][j]) {
                        count++;
                    }
                }
            }
        }

        return count; 
    }
}
//runtime:7 ms
//memory:35.8 MB
