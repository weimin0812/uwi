
    /**
     * Definition for singly-linked list.
     * public class ListNode {
     * int val;
     * ListNode next;
     * ListNode(int x) { val = x; }
     * }
     */
    class Solution {
        public ListNode mergeKLists(ListNode[] lists) {
            // merge k sorted lists
            // todo
            if (lists == null || lists.length == 0) {
                return null;
            }
            int d = 1;
            while (d < lists.length) {
                for (int i = 0; i < lists.length - d; i = i + 2 * d) {
                    lists[i] = mergeTwoLists(lists[i], lists[i + d]);
                }
                d = d * 2;
            }
            return lists[0];
        }

        private ListNode mergeTwoLists(ListNode l1, ListNode l2) {
            if (l1 == null) {
                return l2;
            }
            if (l2 == null) {
                return l1;
            }
            ListNode ret = l1.val <= l2.val ? l1 : l2;
            ret.next = mergeTwoLists(l1.val <= l2.val ? l1.next : l1, l1.val <= l2.val ? l2 : l2.next);
            return ret;
        }
    }

//runtime:2 ms
//memory:45.7 MB
